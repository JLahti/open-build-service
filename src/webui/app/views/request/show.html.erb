<% @pagetitle = "Request ##{@id}" %>
<% @crumb_list = [link_to('Requests', :controller => :home, :action => :requests), @pagetitle] %>

<% content_for :content_for_head do %>
  <%= stylesheet_link_tag 'jquery.autocomplete', 'jquery.tooltip' %>
<% end %>
<%= javascript_include_tag 'jquery.autocomplete.pack', 'jquery.tablesorter', 'jquery.tooltip.min' %>

<% content_for :ready_function do %>
  $('#actions_table').tablesorter({widgets: ['zebra'], sortList: [[0,1]], headers: {3: {sorter: false}}});
  $('#history_table').tablesorter({widgets: ['zebra'], sortList: [[0,0]], headers: {3: {sorter: false}}});
<% end %>

<% if @superseded_by %>
  <h3 id="request_heading"><%= @pagetitle %> (<%= @req.state.name %> by request #<%= link_to @superseded_by, :id => @superseded_by %>)</h3>
<% else %>
  <h3 id="request_heading"><%= @pagetitle %> (<%= @req.state.name %>)</h3>
<% end %>

<div>
  <h3>Actions</h3>
  <table id="actions_table" class="tablesorter" style="width: 95%">
    <thead>
      <tr>
        <th>Type</th>
        <th>Source</th>
        <th>Target</th>
        <th>Info</th>
      </tr>
    </thead>
    <tbody>
      <% @req.each_with_index('action') do |ae, index| %>
        <tr>
          <td><%= ae.value(:type) %></td>
          <td>
            <% if ae.has_element? :source %> <!-- <%= ae.source.project %> -->
              <% if ae.source.has_attribute? :package %> <!-- <%= ae.source.package %> -->
                <% src_proj, src_pack = elide_two(ae.source.project, ae.source.package, 64) %>
                <%= link_to(src_proj, :controller => :project, :action => :show, :project => ae.source.project) %> /
                <% if Package.exists?(ae.source.project, ae.source.package) %>
                  <%= link_to(src_pack, :controller => :package, :action => :show, :project => ae.source.project, :package => ae.source.package) %>
                <% else %>
                  <%= src_pack %>
                <% end %>
              <% else %>
                <%= link_to(elide(ae.source.project, 64), :controller => :project, :action => :show, :project => ae.source.project) %>
              <% end %>
            <% end %>
          </td>
          <td>
          <% if ae.has_element?(:target) %>
            <% if not @project or @project.name != ae.target.project %> <!-- <%= ae.target.project %> -->
              <% if ae.target.has_attribute?(:package) and Package.exists?(ae.target.project, ae.target.package) %> <!-- /<%= ae.target.package %> -->
                <% tgt_proj, tgt_pack = elide_two(ae.target.project, ae.target.package, 64) %>
                <%= link_to(tgt_proj, :controller => :project, :action => :show, :project => ae.target.project) %> /
                <%= link_to(tgt_pack, :controller => :package, :action => :show, :project => ae.target.project, :package => ae.target.package) %>
              <% else %>
                <%= link_to(elide(ae.target.project, 64), :controller => :project, :action => :show, :project => ae.target.project) %>
              <% end %>
            <% else %>
              <% if ae.target.has_attribute?(:package) and Package.exists?(@project.name, ae.target.package) %> <!-- <%= ae.target.package %> -->
                <%= link_to(elide(ae.target.package, 64), :controller => :package, :action => :show, :project => ae.target.project, :package => ae.target.package) %>
              <% elsif ae.value(:type) == "delete" %>
                This project
              <% end %>
            <% end %>
          <% end %>
          </td>
          <td>
            <% if ae.value(:type) == "add_role" %>
              <% if ae.has_element? :group %>
                Role <b><%= ae.group.role %></b> for <b><%= ae.group.name %></b>
              <% elsif ae.has_element? :person %>
                Role <b><%= ae.person.role %></b> for <%= render :partial => 'shared/user_with_realname_and_gravatar', :locals => {:user => ae.person.name, :no_gravatar => true} %>
              <% end %>
            <% elsif ae.has_element? :source and ae.source.has_attribute? :package %>
              <%= link_to(image_tag('icons/information.png', :size => '16x16', :alt => 'Build results', :title => 'Build results', :id => "req_#{@req.value(:id)}_action_#{index}"), :controller => :package, :action => :show, :project => ae.source.project, :package => ae.source.package) %>
              <% javascript_tag do %>
                setup_buildresult_tooltip('<%= "req_#{@req.value(:id)}_action_#{index}" %>', '<%= url_for :controller => :project, :action => :package_buildresult, :project => ae.source.project, :package => ae.source.package %>');
              <% end %>
            <% end %>
            <% if ae.has_element? :options and ae.options.has_element? :sourceupdate and ae.options.sourceupdate.text == 'cleanup' %>
              <%= image_tag('icons/package_delete.png', :size => '16x16', :title => 'Package will be deleted after request was accepted', :alt => 'Package will be deleted after request was accepted') %>
            <% end %>
          </td>
        </tr>
      <% end %>
    </tbody>
  </table>
</div>
<p><%= format_comment(@req.value(:description)) %></p>

<div>
  <h3>History</h3>
  <table id="history_table" class="tablesorter" style="width: 95%">
    <thead>
      <tr>
        <th>Date</th>
        <th>State</th>
        <th>User</th>
        <th style="width: 70%">Comment</th>
      </tr>
    </thead>
    <tbody>
      <% @req.history.each do |h| %>
        <tr>
          <td class="nowrap"><span class="hidden"><%= Time.parse(h[:when].to_s).to_i %></span><%= fuzzy_time_string(Time.at(h[:when]).to_s) %></td>
          <td><%= h[:name] %></td>
          <td class="nowrap"><%= render :partial => 'shared/user_with_realname_and_gravatar', :locals => {:user => h[:who]}%></td>
          <td><%= raw escape_and_transform_nonprintables(h[:comment]) if h.has_key?(:comment) and not h[:comment].nil? %></td>
        </tr>
      <% end %>
    </tbody>
  </table>
</div>

<% if @is_reviewer and (@req.state.name == 'review' or @req.state.name == 'new') %>
  <% content_for :head_javascript do %>
    function modifyReview(id, new_state) {
      var comment = $('#review_comment_' + id).attr('value');
      var path = "/request/modify_review/<%= @id %>?new_state=" + encodeURIComponent(new_state) + "&comment=" + encodeURIComponent(comment);
      if ($('#review_type_' + id).text() == "package") {
        project_and_package = $('#review_name_' + id).text().split(' / ');
        path += "&project=" + encodeURIComponent(project_and_package[0].trim());
        path += "&package=" + encodeURIComponent(project_and_package[1].trim());
      } else if ($('#review_type_' + id).text() == "user") {
        path += "&" + $('#review_type_' + id).text() + "=" + encodeURIComponent($('#review_name_' + id + '_raw').text());
      } else {
        path += "&" + $('#review_type_' + id).text() + "=" + encodeURIComponent($('#review_name_' + id).text());
      }
      $.ajax({url: path,
        success: function(data) {
          $('#review_table td#review_state_' + id).text(data);
          $('#review_table td#review_buttons_' + id).remove();
          $('#review_table td #review_comment_' + id).parent().html(comment);
          if ($('.review_buttons').length == 0) {
            var new_text = '';
            if (data == 'accepted') {
              new_text = $('#request_heading').text().replace(/\(.*\)/, '(new)');
            } else if (data == 'declined') {
              new_text = $('#request_heading').text().replace(/\(.*\)/, '(declined)');
            }
            $('#request_heading').text(new_text);
            $('#review_action_heading').remove();
          }
        }
      })
    }
  <% end %>
<% end %>
<% if @req.each_review.length > 0 %>
  <div>
    <h3>Reviews</h3>
    <table id="review_table" class="tablesorter" style="width: 95%">
      <tr>
        <th style="width: 1%">State</th>
        <th style="width: 1%">Type</th>
        <th style="width: 8%">Reviewer</th>
        <th style="width: 89%">Reviewer Comment</th>
        <% if @is_reviewer and @req.state.name == "review" %>
          <th id="review_action_heading" style="width: 1%">Actions</th>
        <% end %>
      </tr>
      <%-
	 revnum=0
	 @req.each_review do |r|
	   revnum=revnum+1
           comment = r.comment if r.has_element? :comment or nil%>
        <tr>
          <td id="review_state_<%= revnum %>" class="nowrap"><%= r.state %></td>
          <% if r.has_attribute? :by_user %>
            <td id="review_type_<%= revnum %>">user</td>
            <td id="review_name_<%= revnum %>" class="nowrap">
              <span id="review_name_<%= revnum %>_raw" class="hidden"><%= r.by_user %></span>
              <%= render :partial => 'shared/user_with_realname_and_gravatar', :locals => {:user => r.by_user}%>
            </td>
          <% elsif r.has_attribute? :by_group %>
            <td id="review_type_<%= revnum %>">group</td>
            <td id="review_name_<%= revnum %>"><%= r.by_group %></td>
          <% elsif r.has_attribute? :by_project %>
            <% if r.has_attribute? :by_package %>
              <td id="review_type_<%= revnum %>">package</td>
              <td id="review_name_<%= revnum %>" class ="nowrap">
                <%= link_to(r.by_project.to_s + ' / ' + r.by_package.to_s, :controller => :package, :action => :show, :project => r.by_project, :package => r.by_package) %>
              </td>
            <% else %>
              <td id="review_type_<%= revnum %>">project</td>
              <td id="review_name_<%= revnum %>"><%= link_to(r.by_project, :controller => :project, :action => :show, :project => r.by_project) %></td>
            <% end %>
          <% end %>

          <% if @is_reviewer and @req.state.name == "review" and r.state != "accepted" and
                ((r.has_attribute? :by_user and @user.login.to_s == r.by_user.to_s) or
                 (r.has_attribute? :by_group and @user.is_in_group?(r.by_group)) or
                 (r.has_attribute? :by_project and @user.is_maintainer?(r.by_project)) or
                 (r.has_attribute? :by_package and @user.is_maintainer?(r.by_project, r.by_package))) %>
            <td><%= text_field_tag "review_comment_#{revnum}", comment, :style => "width: 99%" %></td>
            <td class="review_buttons" id="review_buttons_<%= revnum %>">
              <%= link_to_function(image_tag("icons/accept.png"), :onclick => "modifyReview(#{revnum}, 'accepted')") %>
              <%= link_to_function(image_tag("icons/cancel.png"), :onclick => "modifyReview(#{revnum}, 'declined')") %>
            </td>
          <% else %>
            <td><%= format_comment(comment) %></td>
          <% end %>
        </tr>
      <%end%>
    </table>
    <% javascript_tag do %>
      $('#review_table').tablesorter({widgets: ['zebra'], sortList: [[0,1]], headers: {3: {sorter: false}, 4: {sorter: false}}});
    <% end %>
  </div>
<% end %>

<% if !["accepted", "declined", "revoked", "superseded"].include?(@state) %>
  <% if @is_maintainer || @is_author %>
    <% if (@req.state.name == "review" || @req.state.name == "new") && !@diff_error %>
      <p>
        <%= link_to_remote(image_tag('icons/user_add.png', :title => "Add reviewer"), :url => {:controller => :request, :action => :add_reviewer_dialog, :id => @id}) %>
        <%= link_to_remote("Add reviewer", :url => {:controller => :request, :action => :add_reviewer_dialog, :id => @id}) %>
      </p>
    <% end %>
    <% form_tag(:action => "changerequest") do %>
      <h3>Handle Request</h3>
      <p>
        <% if @is_maintainer %>
          <% if @contains_submit_action and not @submitter_is_target_maintainer %>
            <%= check_box_tag(:add_submitter_as_maintainer) %> Add
            <%= render :partial => 'shared/user_with_realname_and_gravatar', :locals => {:user => BsRequest.creator(@req), :no_gravatar => true} %> as maintainer of the target package<br/>
          <% end %>
          <% if !@diff_error and @req.action.value("type") == "submit" and @target_pkg %>
            <% linkinfo = @target_pkg.linkinfo %>
            <% if linkinfo %>
              <%= check_box_tag('forward_link', "#{linkinfo.project}_#_#{linkinfo.package}") %> Forward to linked package
              <%= link_to("#{linkinfo.project} / #{linkinfo.package}", :controller => 'package', :action => 'show', :project => linkinfo.project, :package => linkinfo.package) %><br/>
            <% end %>
            <% @target_pkg.developed_packages.each_with_index do |pkg,index| %>
              <% if not(linkinfo and linkinfo.project == pkg.project and linkinfo.package == pkg.name) %>
                <%= check_box_tag("forward_devel_#{index}", "#{pkg.project}_#_#{pkg.name}", true) %> Forward to developed package
                <%= link_to("#{pkg.project} / #{pkg.name}", :controller => 'package', :action => 'show', :project => pkg.project, :package => pkg.name) %><br/>
              <% end %>
            <% end %>
          <% end %>
        <% end %>
        <b>Comment:</b><br/>
        <%= text_field_tag(:reason, '', :style => "width: 99%") %>
      </p>
      <p>
        <%= hidden_field_tag("id", @id) %>
        <% if @is_maintainer %>
          <% if @req.state.name.to_s == "review" %>
            <%= submit_tag "Accept request", :name => 'accepted', :confirm => "Do you really want to approve this request, despite of open review requests ?" %>
          <% else %>
            <%= submit_tag "Accept request", :name => 'accepted' %>
          <% end %>
          <%= submit_tag "Decline request", :name => 'declined' %>
        <% elsif @is_author %>
          <%= submit_tag "Revoke request", :name => 'revoked' %>
        <% end %>
      </p>
    <% end %>
  <% end %>
<% end %>

<% if @diff_per_action_hash and not @diff_per_action_hash.empty? %>
  <h3>Diff View</h3>
  <% if @diff_per_action_hash.keys.length != 1 %>
    <p>
      <%= label_tag(:diff_action, 'Display file differences for action ') %>
      <%= select_tag(:diff_action, options_for_select(@diff_per_action_hash.keys)) %>:
    </p>
    <% javascript_tag do %>
      $('#diff_action').change(function () {
        $('#diff_action option:selected').each(function() {
          $('diff_action_display').hide();
          $('#diff_action_" + $(this).attr('value')).show();
        });
      });
    <% end %>
  <% end %>

  <% @diff_per_action_hash.each do |action_index_and_type, file_diff_hash| %>
    <% action_index, action_type = action_index_and_type.split('_', 2) %>
    <div class="diff_action_display" id="diff_action_<%= action_index_and_type %>" <%= 'class="hidden"' if action_index != '0' %>>
      <% file_diff_hash.each do |filename, diff| %>
        <p><b>File <%= filename %>:</b></p>
        <% if filename.ends_with?('.spec') or filename.ends_with?('.changes') or diff.count("\n") == 0 or diff.ends_with?("\n") %>
          <%= render :partial => "shared/syntaxhighlighter", :locals => {:code => diff, :type => 'diff'} %>
        <% else %>
          <%= render :partial => "shared/syntaxhighlighter", :locals => {:code => diff, :type => 'diff', :collapse => true} %>
        <% end %>
      <% end %>
    </div>
  <% end %>
<% end %>
